<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--该文件无实际作用,只用于记录SQL-->
<mapper namespace="">

    <!--查询各个单位不同指标的个数-->
    <select id="selectCaseCount" resultMap="">
        select
        sum(case when status=1 then 1 else 0 end) as 'first',
        sum(case when status=2 then 1 else 0 end) as 'two',
        sum(case when status=3 then 1 else 0 end) as 'three',
        sum(case when status=5 then 1 else 0 end) as 'four'
        from cases
        group by
        court_id,court_name
    </select>

    <!--一对多时的分页查询-->
    <select id="selectByPage" resultMap="">
        SELECT *
        FROM
        (
        SELECT * FROM target_table WHERE 1 = 1 LIMIT ${(page-1)*limit},${limit}
        ) t1
        LEFT JOIN table2 t2 ON t1.id = t2.order_id
    </select>

    <!--批量操作常用属性-->
    <!--collection表示参数的类型,由@Param参数指定,当不指定且为单参数时,参数类型为List时,值为list,参数为array数组时,值为array-->
    <!--item表示集合中的每一条数据-->
    <!--index表示迭代到集合中的哪个-->
    <!--separator表示每一条数据后的分割符-->
    <!--open和close表示foreach标签开始和结束时的语句,使用时需要注意是否已存在括号-->
    <!--批量新增-->
    <insert id="batch">
        insert into
        el_user_info (id,user_name)
        values
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item.id},#{item.userName}
        </foreach>
    </insert>

    <!--批量更新-->
    <update id="">
        <foreach collection="list" item="bean" index="index" open="" close="" separator=";">
        UPDATE green_beans
        <set>
            stock=#{bean.stock}
        </set>
        <where>
            beanUid = #{bean.beanUid}
        </where>
    </update>

    <!--批量删除-->

    <delete id="">
        delete from t_user where id in (
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>

    <!--一对一，一对多的结果封装,一次查询出所有的结果,不存在N+1问题-->
    <!--collection标签里存放的是集合的属性,即所谓的多,association标签里存放的是对象的属性,即所谓的一-->
    <!--association标签必须放在collection表现的前面,否则会报错-->
    <resultMap id="ListResult"   type="com.liufeng.domain.dto.response.VisitListResponseDTO" >
        <id column="id" jdbcType="VARCHAR"  property="id" />
        <result column="visitPurpose"  jdbcType="VARCHAR" property="visitPurpose"/>
        <result column="visitTime" jdbcType="TIMESTAMP"  property="visitTime"/>
        <result column="visitPersonNum"  jdbcType="INTEGER"  property="visitPersonNum"/>
        <association property="com.liufeng.domain.entity.PersonInfos">
            <result column="name1"  jdbcType="VARCHAR" property="name1"/>
        </association>
        <collection property="person" ofType="com.liufeng.domain.entity.PersonInfo">
            <result column="name"  jdbcType="VARCHAR" property="name"/>
            <result column="position"  jdbcType="VARCHAR" property="position"/>
            <result column="phone"  jdbcType="VARCHAR" property="phone"/>
        </collection>
    </resultMap>
</mapper>